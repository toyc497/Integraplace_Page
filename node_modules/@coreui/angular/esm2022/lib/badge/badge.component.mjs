import { Component, HostBinding, Input } from '@angular/core';
import { TextBgColorDirective, TextColorDirective } from '../utilities';
import * as i0 from "@angular/core";
import * as i1 from "../utilities/text-color.directive";
import * as i2 from "../utilities/text-bg-color.directive";
export class BadgeComponent {
    get hostClasses() {
        const positionClasses = {
            'position-absolute': !!this.position,
            'translate-middle': !!this.position,
            'top-0': this.position?.includes('top'),
            'top-100': this.position?.includes('bottom'),
            'start-100': this.position?.includes('end'),
            'start-0': this.position?.includes('start')
        };
        return Object.assign({
            badge: true,
            [`bg-${this.color}`]: !!this.color,
            [`badge-${this.size}`]: !!this.size,
            [`${this.shape}`]: !!this.shape
        }, !!this.position ? positionClasses : {});
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: BadgeComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.12", type: BadgeComponent, isStandalone: true, selector: "c-badge", inputs: { color: "color", position: "position", shape: "shape", size: "size", textColor: "textColor", textBgColor: "textBgColor" }, host: { properties: { "class": "this.hostClasses" } }, hostDirectives: [{ directive: i1.TextColorDirective, inputs: ["cTextColor", "textColor"] }, { directive: i2.TextBgColorDirective, inputs: ["cTextBgColor", "textBgColor"] }], ngImport: i0, template: '<ng-content />', isInline: true }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: BadgeComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'c-badge',
                    template: '<ng-content />',
                    standalone: true,
                    hostDirectives: [
                        { directive: TextColorDirective, inputs: ['cTextColor: textColor'] },
                        { directive: TextBgColorDirective, inputs: ['cTextBgColor: textBgColor'] }
                    ]
                }]
        }], propDecorators: { color: [{
                type: Input
            }], position: [{
                type: Input
            }], shape: [{
                type: Input
            }], size: [{
                type: Input
            }], textColor: [{
                type: Input
            }], textBgColor: [{
                type: Input
            }], hostClasses: [{
                type: HostBinding,
                args: ['class']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFkZ2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZXVpLWFuZ3VsYXIvc3JjL2xpYi9iYWRnZS9iYWRnZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTlELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGNBQWMsQ0FBQzs7OztBQVd4RSxNQUFNLE9BQU8sY0FBYztJQW9DekIsSUFDSSxXQUFXO1FBQ2IsTUFBTSxlQUFlLEdBQUc7WUFDdEIsbUJBQW1CLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRO1lBQ3BDLGtCQUFrQixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUTtZQUNuQyxPQUFPLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxRQUFRLENBQUMsS0FBSyxDQUFDO1lBQ3ZDLFNBQVMsRUFBRSxJQUFJLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxRQUFRLENBQUM7WUFDNUMsV0FBVyxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDLEtBQUssQ0FBQztZQUMzQyxTQUFTLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxRQUFRLENBQUMsT0FBTyxDQUFDO1NBQzVDLENBQUM7UUFFRixPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUM7WUFDakIsS0FBSyxFQUFFLElBQUk7WUFDWCxDQUFDLE1BQU0sSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLO1lBQ2xDLENBQUMsU0FBUyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUk7WUFDbkMsQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSztTQUNoQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FDMUMsQ0FBQztJQUNKLENBQUM7K0dBdERVLGNBQWM7bUdBQWQsY0FBYyw0YUFQZixnQkFBZ0I7OzRGQU9mLGNBQWM7a0JBVDFCLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLFNBQVM7b0JBQ25CLFFBQVEsRUFBRSxnQkFBZ0I7b0JBQzFCLFVBQVUsRUFBRSxJQUFJO29CQUNoQixjQUFjLEVBQUU7d0JBQ2QsRUFBRSxTQUFTLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxFQUFFLENBQUMsdUJBQXVCLENBQUMsRUFBRTt3QkFDcEUsRUFBRSxTQUFTLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxFQUFFLENBQUMsMkJBQTJCLENBQUMsRUFBRTtxQkFDM0U7aUJBQ0Y7OEJBTVUsS0FBSztzQkFBYixLQUFLO2dCQUtHLFFBQVE7c0JBQWhCLEtBQUs7Z0JBS0csS0FBSztzQkFBYixLQUFLO2dCQUlHLElBQUk7c0JBQVosS0FBSztnQkFPRyxTQUFTO3NCQUFqQixLQUFLO2dCQVFHLFdBQVc7c0JBQW5CLEtBQUs7Z0JBR0YsV0FBVztzQkFEZCxXQUFXO3VCQUFDLE9BQU8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3RCaW5kaW5nLCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmFkZ2VQb3NpdGlvbnMsIENvbG9ycywgU2hhcGVzLCBUZXh0Q29sb3JzIH0gZnJvbSAnLi4vY29yZXVpLnR5cGVzJztcbmltcG9ydCB7IFRleHRCZ0NvbG9yRGlyZWN0aXZlLCBUZXh0Q29sb3JEaXJlY3RpdmUgfSBmcm9tICcuLi91dGlsaXRpZXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjLWJhZGdlJyxcbiAgdGVtcGxhdGU6ICc8bmctY29udGVudCAvPicsXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGhvc3REaXJlY3RpdmVzOiBbXG4gICAgeyBkaXJlY3RpdmU6IFRleHRDb2xvckRpcmVjdGl2ZSwgaW5wdXRzOiBbJ2NUZXh0Q29sb3I6IHRleHRDb2xvciddIH0sXG4gICAgeyBkaXJlY3RpdmU6IFRleHRCZ0NvbG9yRGlyZWN0aXZlLCBpbnB1dHM6IFsnY1RleHRCZ0NvbG9yOiB0ZXh0QmdDb2xvciddIH1cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBCYWRnZUNvbXBvbmVudCB7XG4gIC8qKlxuICAgKiBTZXRzIHRoZSBjb2xvciBjb250ZXh0IG9mIHRoZSBjb21wb25lbnQgdG8gb25lIG9mIENvcmVVSeKAmXMgdGhlbWVkIGNvbG9ycy5cbiAgICogQHR5cGUgQ29sb3JzXG4gICAqL1xuICBASW5wdXQoKSBjb2xvcj86IENvbG9ycztcbiAgLyoqXG4gICAqIFBvc2l0aW9uIGJhZGdlIGluIG9uZSBvZiB0aGUgY29ybmVycyBvZiBhIGxpbmsgb3IgYnV0dG9uLlxuICAgKiBAdHlwZSBCYWRnZVBvc2l0aW9uc1xuICAgKi9cbiAgQElucHV0KCkgcG9zaXRpb24/OiBCYWRnZVBvc2l0aW9ucztcbiAgLyoqXG4gICAqIFNlbGVjdCB0aGUgc2hhcGUgb2YgdGhlIGNvbXBvbmVudC5cbiAgICogQHR5cGUgU2hhcGVzXG4gICAqL1xuICBASW5wdXQoKSBzaGFwZT86IFNoYXBlcztcbiAgLyoqXG4gICAqIFNpemUgdGhlIGNvbXBvbmVudCBzbWFsbC5cbiAgICovXG4gIEBJbnB1dCgpIHNpemU/OiAnc20nO1xuXG4gIC8qKlxuICAgKiBTZXRzIHRoZSB0ZXh0IGNvbG9yIG9mIHRoZSBjb21wb25lbnQgdG8gb25lIG9mIENvcmVVSeKAmXMgdGhlbWVkIGNvbG9ycy5cbiAgICogdmlhIFRleHRDb2xvckRpcmVjdGl2ZVxuICAgKiBAdHlwZSBUZXh0Q29sb3JzXG4gICAqL1xuICBASW5wdXQoKSB0ZXh0Q29sb3I/OiBUZXh0Q29sb3JzO1xuXG4gIC8qKlxuICAgKiBTZXRzIHRoZSBjb21wb25lbnQncyBjb2xvciBzY2hlbWUgdG8gb25lIG9mIENvcmVVSSdzIHRoZW1lZCBjb2xvcnMsIGVuc3VyaW5nIHRoZSB0ZXh0IGNvbG9yIGNvbnRyYXN0IGFkaGVyZXMgdG8gdGhlIFdDQUcgNC41OjEgY29udHJhc3QgcmF0aW8gc3RhbmRhcmQgZm9yIGFjY2Vzc2liaWxpdHkuXG4gICAqIHZpYSBUZXh0QmdDb2xvckRpcmVjdGl2ZVxuICAgKiBAdHlwZSBDb2xvcnNcbiAgICogQHNpbmNlIDUuMC4wXG4gICAqL1xuICBASW5wdXQoKSB0ZXh0QmdDb2xvcj86IENvbG9ycztcblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzJylcbiAgZ2V0IGhvc3RDbGFzc2VzKCk6IGFueSB7XG4gICAgY29uc3QgcG9zaXRpb25DbGFzc2VzID0ge1xuICAgICAgJ3Bvc2l0aW9uLWFic29sdXRlJzogISF0aGlzLnBvc2l0aW9uLFxuICAgICAgJ3RyYW5zbGF0ZS1taWRkbGUnOiAhIXRoaXMucG9zaXRpb24sXG4gICAgICAndG9wLTAnOiB0aGlzLnBvc2l0aW9uPy5pbmNsdWRlcygndG9wJyksXG4gICAgICAndG9wLTEwMCc6IHRoaXMucG9zaXRpb24/LmluY2x1ZGVzKCdib3R0b20nKSxcbiAgICAgICdzdGFydC0xMDAnOiB0aGlzLnBvc2l0aW9uPy5pbmNsdWRlcygnZW5kJyksXG4gICAgICAnc3RhcnQtMCc6IHRoaXMucG9zaXRpb24/LmluY2x1ZGVzKCdzdGFydCcpXG4gICAgfTtcblxuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHtcbiAgICAgICAgYmFkZ2U6IHRydWUsXG4gICAgICAgIFtgYmctJHt0aGlzLmNvbG9yfWBdOiAhIXRoaXMuY29sb3IsXG4gICAgICAgIFtgYmFkZ2UtJHt0aGlzLnNpemV9YF06ICEhdGhpcy5zaXplLFxuICAgICAgICBbYCR7dGhpcy5zaGFwZX1gXTogISF0aGlzLnNoYXBlXG4gICAgICB9LCAhIXRoaXMucG9zaXRpb24gPyBwb3NpdGlvbkNsYXNzZXMgOiB7fVxuICAgICk7XG4gIH1cbn1cbiJdfQ==